
name: Deploy to Firebase Hosting (Preview)

on:
  pull_request:
    types: [opened, synchronize, reopened] # Trigger on PR creation, updates, and reopening

jobs:
  build_and_deploy_preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read    # Allow checkout
      pull-requests: write # Allow posting PR comments
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Checkout the PR's head commit for accurate preview

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Using Node.js 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js application
        env:
          # These NEXT_PUBLIC_ variables are required for the 'next build' command
          # Uses _PREVIEW suffixed secrets if available, otherwise falls back to default secrets
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY_PREVIEW || secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN_PREVIEW || secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID_PREVIEW || vars.FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET_PREVIEW || secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID_PREVIEW || secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID_PREVIEW || secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        run: npm run build

      - name: Deploy to Firebase Hosting (Preview Channel)
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: deploy_preview # Step ID to access outputs
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseToken: '${{ secrets.FIREBASE_CLI_TOKEN }}'
          # Use a preview-specific project ID if configured, otherwise fallback to the default
          projectId: '${{ vars.FIREBASE_PROJECT_ID_PREVIEW || vars.FIREBASE_PROJECT_ID }}'
          # Create a unique channel ID for the PR, e.g., pr-123
          channelId: 'pr-${{ github.event.number }}'
          expires: '7d' # Optional: Preview channels will expire after 7 days

      - name: Add PR Comment with Preview URL
        uses: marocchino/sticky-pull-request-comment@v2
        if: success() && steps.deploy_preview.outputs.details_url # Only run if deployment succeeded and URL is available
        with:
          header: FirebasePreviewLink # Unique header for the comment to make it sticky
          message: |
            ðŸš€ Firebase Hosting Preview URL: ${{ steps.deploy_preview.outputs.details_url }}
            Preview will expire around: ${{ steps.deploy_preview.outputs.expire_time || 'N/A (or on merge/close)' }}
